<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">

	<context:annotation-config />
	  <!-- 启动包扫描功能，以便注册带有@Service、@repository、@Component等注解的类成为spring的bean --> 
    <context:component-scan base-package="win.*.service.impl" />
	<bean id="propertyConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxPoolSize" value="3"></property>
		<property name="minPoolSize" value="1"></property>
		<property name="initialPoolSize" value="1"></property>
		<property name="autoCommitOnClose" value="true"></property>
		<property name="checkoutTimeout" value="3600"></property>
		<property name="acquireIncrement" value="5"></property>
		<property name="maxIdleTime" value="600"></property>
	</bean>
	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:win/*/mapper/mapping/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />  
	</bean>
	<!-- Transaction Manager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用自动扫描包的方式来注册各种mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="win.*.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0"  >
			<ref bean="sqlSessionFactory"/>
		</constructor-arg>
	</bean>
	
	<!-- 注解方式配置事物  
	<tx:annotation-driven transaction-manager="transactionManager" />-->
	
	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="repair" propagation="REQUIRED" />
			<tx:method name="delAndRepair" propagation="REQUIRED" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="datagrid*" propagation="SUPPORTS" />
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* win.*.service.impl.*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>
	
	<!--定时任务配置开始 -->
	
	<!--申请单过期作废开始   每天下午15点05分执行-->
	<!-- <bean name="applyAutoExpiredJobService" class="com.hs.job.service.impl.ApplyAutoExpiredJobServiceImpl"/>
	
	<bean id="applyAutoExpiredJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="applyAutoExpiredJobService"/>
		<property name="targetMethod" value="execute"/>
	</bean> -->
	
	<!-- <bean id="applyAutoExpiredTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="applyAutoExpiredJobDetail"/>
		<property name="cronExpression" value="0 05 15 * * ?"></property>
	</bean> -->
	<!--申请单过期作废结束-->
	
	<!--评价自动归档开始   每天凌晨01点10分执行-->
	<!-- <bean name="evaluateAutoArchivedJobService" class="com.hs.job.service.impl.EvaluateAutoArchivedJobServiceImpl"/>
	
	<bean id="evaluateAutoArchivedJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="evaluateAutoArchivedJobService"/>
		<property name="targetMethod" value="execute"/>
	</bean> -->
	
	<!-- <bean id="evaluateAutoArchivedTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="evaluateAutoArchivedJobDetail"/>
		<property name="cronExpression" value="0 10 01 * * ?"></property>
	</bean> -->
	
	<!--评价自动归档结束-->
	<!-- <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref local="applyAutoExpiredTrigger"/>
				<ref local="evaluateAutoArchivedTrigger"/>
			</list>
		</property>
	</bean> -->
	<!--定时任务配置结束 -->
</beans>

